{"version":3,"sources":["Header.js","Login.js","TeamSelect.js","Standing.js","Standings.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","id","Link","to","style","marginRight","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","fetch","then","res","json","user","setState","passwordFeedback","username","userId","state","name","post","isAuthenticated","console","log","_this2","onSubmit","type","value","onChange","target","marginLeft","Component","TeamSelect","Standing","wins","Standings","standingsHard","Chris Clark","Coreen Kopper","Patrick Grove","Kevin Meuse","Brendon Desrochers","Gil Estupinan","Timothy Falkner","French/Reiman","Scott Sherman","Matt Gordon","Mike Agresti","Brendan Bansavage","Kyle Harris","Ron Haraka","Adam Sidney","Troy Davis","Andrew Soltish","Brayton Wike","Joe Franza","Calvin Groves","Erin McDermott","Jay Kelly","Michael Leboff","Johnny Vohra","Ryan Corbalis","Rob Coloney","Alex Raup","Lucille Kelly","Dan Vogel","Chris Godfrey","Amol Vohra","keys","map","person","i","src_Standing_0","key","App","BrowserRouter","src_Header_0","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.972d4cd6.chunk.js","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => (\n  <header>\n    <span className=\"title\"><strong>\n      <span className=\"bordered\" id=\"one\">#</span>\n      <span className=\"bordered\" id=\"two\">5</span>\n      <span className=\"bordered\" id=\"three\">A</span>\n      <span className=\"bordered\" id=\"four\">L</span>\n      <span className=\"bordered\" id=\"five\">I</span>\n      <span className=\"bordered\" id=\"six\">V</span>\n      <span className=\"bordered\" id=\"seven\">E</span>\n    </strong></span>\n    <span className=\"link\">\n        <span>\n          <Link to={'/login'} style={{marginRight:\"40px\"}}>LOGIN</Link>\n        </span>\n        <span>\n          <Link to={'/teamselect'} style={{marginRight:\"40px\"}}>SELECT TEAMS</Link>\n        </span>\n        <span>\n          <Link to={'/standings'}>STANDINGS</Link>\n        </span>\n    </span>\n  </header>\n)\n\nexport default Header;","import React, { Component } from 'react';\nimport \"./Login.css\";\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      passwordFeedback: '',\n      userId: null,\n      name: '',\n      post: '',\n      isAuthenticated: false\n    }\n  }\n\n  componentDidMount() {\n    console.log('login page mounted')\n    // this.callApi()\n    //   .then(res => this.setState({ response: res.express }))\n    //   .catch(err => console.log(err));\n  }\n\n  // callApi = async () => {\n  //   const response = await fetch('/api/hello');\n  //   const body = await response.json();\n  //   if (response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n\n  componentWillUpdate() {\n\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch('/api/password?password=' + e)\n      .then(res => res.json())\n      .then(user => {\n        if (user) {\n          this.setState({passwordFeedback: 'Accepted!'})\n        } else {\n          this.setState({passwordFeedback: 'No good!'})\n        }\n      })\n      .then(username => this.setState({ userId: username,  }))\n  };\n\n  render() {\n    return (\n      <div className=\"Login\">\n        <div id=\"logincontainer\">\n        <div id=\"containercontents\" />\n          <p><strong>Come get some nice #5ALIVE</strong></p>\n            <form onSubmit={this.handleSubmit}>\n              <p>Enter password:</p>\n              <input\n                type=\"text\"\n                value={this.state.post}\n                onChange={e => this.setState({ post: e.target.value })}\n              />\n              <button type=\"submit\" style={{marginLeft:\"10px\"}}>Submit</button>\n            </form>\n          <p>{this.state.passwordFeedback}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './TeamSelect.css';\n\nclass TeamSelect extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    console.log('teamselect mounted')\n  }\n\n  render() {\n    return (\n      <div className=\"TeamSelect\">\n        <span>COMING REAL SOON</span>\n      </div>\n    )\n  }\n\n}\n\nexport default TeamSelect;","import React from 'react';\nimport './Standing.css';\n\nconst Standing = (props) => {\n\n  return (\n\n    <div className=\"Standing\">\n      <span>{props.name} -</span>\n      <span>- {props.wins}</span>\n    </div>\n\n  )\n\n}\n\nexport default Standing;","import React, { Component } from 'react';\nimport Standing from './Standing';\nimport './Standings.css'\n\nclass Standings extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {standingsHard: {'Chris Clark': 129,\n    'Coreen Kopper': 128,\n    'Patrick Grove': 124,\n    'Kevin Meuse': 124,\n    'Brendon Desrochers': 123,\n    'Gil Estupinan': 123,\n    'Timothy Falkner': 123,\n    'French/Reiman': 122,\n    'Scott Sherman': 122,\n    'Matt Gordon': 122,\n    'Mike Agresti':  121,\n    'Brendan Bansavage': 121,\n    'Kyle Harris': 120,\n    'Ron Haraka':  119,\n    'Adam Sidney': 118,\n    'Troy Davis':  117,\n    'Andrew Soltish': 117,\n    'Brayton Wike': 117,\n    'Joe Franza': 116,\n    'Calvin Groves': 114,\n    'Erin McDermott': 114,\n    'Jay Kelly': 114,\n    'Michael Leboff': 113,\n    'Johnny Vohra': 113,\n    'Ryan Corbalis': 109,\n    'Rob Coloney': 109,\n    'Alex Raup': 108,\n    'Lucille Kelly': 100,\n    'Dan Vogel': 91,\n    'Chris Godfrey': 77,\n    'Amol Vohra': 75}};\n  }\n\n\n  componentDidMount() {\n    console.log('standings mounted')\n    console.log(Object.keys(this.state.standingsHard))\n  }\n\n  render() {\n    return (\n      <div className=\"Standings\">\n        {Object.keys(this.state.standingsHard).map((person, i) => {\n          return (<Standing key={i} name={person} wins={this.state.standingsHard[person]}/>)\n        })}\n        <div id=\"bkgd\"/>\n        <div id=\"comment\">These are from last year</div>\n      </div>\n    );\n  }\n\n}\n\nexport default Standings;","import React, { Component } from 'react';\nimport Header from './Header';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './Login';\nimport TeamSelect from './TeamSelect';\nimport Standings from './Standings';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Header />\n            <Route path='/' exact component={Login}/>\n            <Route path='/login' component={Login}/>\n            <Route path='/teamselect' component={TeamSelect}/>\n            <Route path='/standings' component={Standings}/>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}