{"version":3,"sources":["Header.js","Login.js","TeamSelect.js","Standing.js","Standings.js","Info.js","PastChamps.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","id","Link","to","style","marginRight","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","passwordFeedback","userId","name","post","isAuthenticated","_this2","onSubmit","handleSubmit","type","value","onChange","e","setState","target","marginLeft","Component","TeamSelect","console","log","Standing","wins","Standings","standingsHard","Chris Clark","Coreen Kopper","Patrick Grove","Kevin Meuse","Brendon Desrochers","Gil Estupinan","Timothy Falkner","French/Reiman","Scott Sherman","Matt Gordon","Mike Agresti","Brendan Bansavage","Kyle Harris","Ron Haraka","Adam Sidney","Troy Davis","Andrew Soltish","Brayton Wike","Joe Franza","Calvin Groves","Erin McDermott","Jay Kelly","Michael Leboff","Johnny Vohra","Ryan Corbalis","Rob Coloney","Alex Raup","Lucille Kelly","Dan Vogel","Chris Godfrey","Amol Vohra","keys","map","person","i","src_Standing_0","key","Info","PastChamps","App","BrowserRouter","src_Header_0","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0a8b366.chunk.js","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => (\n  <header>\n    <span className=\"title\"><strong>\n      <span className=\"bordered\" id=\"one\">#</span>\n      <span className=\"bordered\" id=\"two\">5</span>\n      <span className=\"bordered\" id=\"three\">A</span>\n      <span className=\"bordered\" id=\"four\">L</span>\n      <span className=\"bordered\" id=\"five\">I</span>\n      <span className=\"bordered\" id=\"six\">V</span>\n      <span className=\"bordered\" id=\"seven\">E</span>\n    </strong></span>\n    <span className=\"link\">\n        <span>\n          <Link to={'/login'}>HOME</Link>\n        </span>\n        <span>\n          <Link to={'/info'}>INFO</Link>\n        </span>\n        <span>\n          <Link to={'/standings'}>STANDINGS</Link>\n        </span>\n        <span>\n          <Link to={'/teamselect'} style={{marginRight:\"40px\"}}>SELECT TEAMS</Link>\n        </span>\n    </span>\n  </header>\n)\n\nexport default Header;","import React, { Component } from 'react';\nimport \"./Login.css\";\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      passwordFeedback: '',\n      userId: null,\n      name: '',\n      post: '',\n      isAuthenticated: false\n    }\n  }\n\n  // componentDidMount() {\n    // this.callApi()\n    //   .then(res => this.setState({ response: res.express }))\n    //   .catch(err => console.log(err));\n  // }\n\n  // callApi = async () => {\n  //   const response = await fetch('/api/hello');\n  //   const body = await response.json();\n  //   if (response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n\n  // componentWillUpdate() {\n\n  // }\n\n  // handleSubmit = e => {\n  //   e.preventDefault();\n  //   fetch('/api/password?password=' + e)\n  //     .then(res => res.json())\n  //     .then(user => {\n  //       if (user) {\n  //         this.setState({passwordFeedback: 'Accepted!'})\n  //       } else {\n  //         this.setState({passwordFeedback: 'No good!'})\n  //       }\n  //     })\n  //     .then(username => this.setState({ userId: username,  }))\n  // };\n\n  render() {\n    return (\n      <div className=\"Login\">\n        <div id=\"logincontainer\">\n          <p><strong>Come get some nice #5ALIVE</strong></p>\n            <form onSubmit={this.handleSubmit}>\n              <p>Enter password:</p>\n              <input\n                type=\"text\"\n                value={this.state.post}\n                onChange={e => this.setState({ post: e.target.value })}\n              />\n              <button type=\"submit\" style={{marginLeft:\"10px\"}}>Submit</button>\n            </form>\n          <p>{this.state.passwordFeedback}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './TeamSelect.css';\n\nclass TeamSelect extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    console.log('teamselect mounted')\n  }\n\n  render() {\n    return (\n      <div className=\"TeamSelect\">\n        <span>COMING REAL SOON</span>\n      </div>\n    )\n  }\n\n}\n\nexport default TeamSelect;","import React from 'react';\nimport './Standing.css';\n\nconst Standing = (props) => {\n\n  return (\n\n    <div className=\"Standing\">\n      <span>{props.name} -</span>\n      <span>- {props.wins}</span>\n    </div>\n\n  )\n\n}\n\nexport default Standing;","import React, { Component } from 'react';\nimport Standing from './Standing';\nimport './Standings.css'\n\nclass Standings extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {standingsHard: {'Chris Clark': 129,\n    'Coreen Kopper': 128,\n    'Patrick Grove': 124,\n    'Kevin Meuse': 124,\n    'Brendon Desrochers': 123,\n    'Gil Estupinan': 123,\n    'Timothy Falkner': 123,\n    'French/Reiman': 122,\n    'Scott Sherman': 122,\n    'Matt Gordon': 122,\n    'Mike Agresti':  121,\n    'Brendan Bansavage': 121,\n    'Kyle Harris': 120,\n    'Ron Haraka':  119,\n    'Adam Sidney': 118,\n    'Troy Davis':  117,\n    'Andrew Soltish': 117,\n    'Brayton Wike': 117,\n    'Joe Franza': 116,\n    'Calvin Groves': 114,\n    'Erin McDermott': 114,\n    'Jay Kelly': 114,\n    'Michael Leboff': 113,\n    'Johnny Vohra': 113,\n    'Ryan Corbalis': 109,\n    'Rob Coloney': 109,\n    'Alex Raup': 108,\n    'Lucille Kelly': 100,\n    'Dan Vogel': 91,\n    'Chris Godfrey': 77,\n    'Amol Vohra': 75}};\n  }\n\n  render() {\n    return (\n    <div className=\"outstandings\">\n      <div className=\"Standings\">\n        <div id=\"names\">\n        {Object.keys(this.state.standingsHard).map((person, i) => {\n          return (<Standing key={i} name={person} wins={this.state.standingsHard[person]}/>)\n        })}\n        </div>\n      </div>\n    <div id=\"comment\">These are from last year</div>\n    </div>\n    );\n  }\n\n}\n\nexport default Standings;","import React from 'react';\nimport './Info.css';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\n\nconst Info = () => {\n\n  return (\n    <div className=\"infocontainer\">\n      <div className=\"info\">\n      <h2>HISTORY</h2>\n      <p>The first #5ALIVE was conducted by Ryan Corbalis back in 1879 in his small village in Connecticut. All records that year were kept on elk hides and then burned ceremonially at the end of the season, a tradition that we continue today.</p>\n        <Link to={'/pastchamps'}>Click to see our past winners</Link>\n        <br></br>\n      <br></br>\n      <h2>RULES</h2>\n      <p>The rules are simple, and pleasing to the eye - participants select five teams that collectively won no more than 100 games the previous season. The person whose teams win the most games this year wins the grand prize: a Fast & The Furious DVD box set and a 6-pack of Doritos-flavored Mountain Dew.</p>\n      <br></br>\n      <h2>2018-19</h2>\n      <p>This season promises to be our greatest yet, with the following #5ALIVE legends already confirming their commitment:\n          <br></br>\n          <br></br>\n          <li>Chris Godfrey</li>\n          <li>Pat Godfrey</li>\n          <li>Ryan Corbalis</li>\n          <li>Michael Jordan</li>\n          <li>JP Kelly</li>\n          <li>Dan Vogel</li>\n          <li>Wilt Chamberlain</li>\n          <li>Pat Godfrey</li>\n      </p>\n      </div>\n    </div>\n  )\n\n}\n\nexport default Info;","import React from 'react';\nimport './PastChamps.css'\n\nconst PastChamps = () => {\n  return (<div className=\"champscontainer\">\n    <div className=\"champs\">\n    <h2>PAST CHAMPS</h2>\n    <div>2018 - Chris Clark</div>\n    <div>2017 - Andrew Cahalan</div>\n    <div>2016 - Scott Sherman</div>\n    <div>2015 - Rob Coloney</div>\n    <div>2014 - Tim Faulkner</div>\n    <div>2013 - ???</div>\n    <div>2012 - Wilt Chamberlain</div>\n    <div>2011 - Troy Davis</div>\n    </div>\n  </div>)\n}\n\nexport default PastChamps;","import React, { Component } from 'react';\nimport Header from './Header';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './Login';\nimport TeamSelect from './TeamSelect';\nimport Standings from './Standings';\nimport Info from './Info';\nimport PastChamps from './PastChamps';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Header />\n            <Route path='/' exact component={Login}/>\n            <Route path='/login' component={Login}/>\n            <Route path='/teamselect' component={TeamSelect}/>\n            <Route path='/standings' component={Standings}/>\n            <Route path='/info' component={Info}/>\n            <Route path='/pastchamps' component={PastChamps}/>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}