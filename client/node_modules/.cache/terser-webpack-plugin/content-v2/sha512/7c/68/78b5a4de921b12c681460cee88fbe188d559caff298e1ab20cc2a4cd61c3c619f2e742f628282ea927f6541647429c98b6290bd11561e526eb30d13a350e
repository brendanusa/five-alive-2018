{"map":"{\"version\":3,\"sources\":[\"/Users/bbansavage/Desktop/projects/FA2018/client/src/App.js\",\"/Users/bbansavage/Desktop/projects/FA2018/client/src/serviceWorker.js\",\"/Users/bbansavage/Desktop/projects/FA2018/client/src/index.js\",\"/Users/bbansavage/Desktop/projects/FA2018/client/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/bbansavage/Desktop/projects/FA2018/client/src/logo.svg\"],\"names\":[\"App\",\"state\",\"response\",\"post\",\"responseToPost\",\"callApi\",\"_callee\",\"body\",\"regenerator_default\",\"a\",\"wrap\",\"_context\",\"prev\",\"next\",\"fetch\",\"sent\",\"json\",\"status\",\"Error\",\"message\",\"abrupt\",\"stop\",\"this\",\"handleSubmit\",\"_callee2\",\"e\",\"_context2\",\"preventDefault\",\"method\",\"headers\",\"Content-Type\",\"JSON\",\"stringify\",\"_this\",\"text\",\"setState\",\"_this2\",\"then\",\"res\",\"express\",\"catch\",\"err\",\"console\",\"log\",\"_this3\",\"react_default\",\"createElement\",\"className\",\"src\",\"logo\",\"alt\",\"href\",\"target\",\"rel\",\"onSubmit\",\"type\",\"value\",\"onChange\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nclass App extends Component {\\n  state = {\\n    response: '',\\n    post: '',\\n    responseToPost: '',\\n  };\\n  componentDidMount() {\\n    this.callApi()\\n      .then(res => this.setState({ response: res.express }))\\n      .catch(err => console.log(err));\\n  }\\n  callApi = async () => {\\n    const response = await fetch('/api/hello');\\n    const body = await response.json();\\n    if (response.status !== 200) throw Error(body.message);\\n    return body;\\n  };\\n  handleSubmit = async e => {\\n    e.preventDefault();\\n    const response = await fetch('/api/world', {\\n      method: 'POST',\\n      headers: {\\n        'Content-Type': 'application/json',\\n      },\\n      body: JSON.stringify({ post: this.state.post }),\\n    });\\n    const body = await response.text();\\n    this.setState({ responseToPost: body });\\n  };\\nrender() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <img src={logo} className=\\\"App-logo\\\" alt=\\\"logo\\\" />\\n          <p>\\n            Edit <code>src/App.js</code> and save to reload.\\n          </p>\\n          <a\\n            className=\\\"App-link\\\"\\n            href=\\\"https://reactjs.org\\\"\\n            target=\\\"_blank\\\"\\n            rel=\\\"noopener noreferrer\\\"\\n          >\\n            Learn React\\n          </a>\\n        </header>\\n        <p>{this.state.response}</p>\\n        <form onSubmit={this.handleSubmit}>\\n          <p>\\n            <strong>Enter name:</strong>\\n          </p>\\n          <input\\n            type=\\\"text\\\"\\n            value={this.state.post}\\n            onChange={e => this.setState({ post: e.target.value })}\\n          />\\n          <button type=\\\"submit\\\">Submit</button>\\n        </form>\\n        <p>{this.state.responseToPost}</p>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,n){e.exports=n(22)},16:function(e,t,n){},20:function(e,t,n){},22:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(4),s=n.n(o),c=(n(16),n(1)),i=n.n(c),l=n(2),u=n(5),p=n(6),m=n(9),h=n(7),f=n(10),d=n(8),v=n.n(d),b=(n(20),function(e){function t(){var e,n;Object(u.a)(this,t);for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];return(n=Object(m.a)(this,(e=Object(h.a)(t)).call.apply(e,[this].concat(r)))).state={response:\"\",post:\"\",responseToPost:\"\"},n.callApi=Object(l.a)(i.a.mark(function e(){var t,n;return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(\"/api/hello\");case 2:return t=e.sent,e.next=5,t.json();case 5:if(n=e.sent,200===t.status){e.next=8;break}throw Error(n.message);case 8:return e.abrupt(\"return\",n);case 9:case\"end\":return e.stop()}},e,this)})),n.handleSubmit=function(){var e=Object(l.a)(i.a.mark(function e(t){var a,r;return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),e.next=3,fetch(\"/api/world\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({post:n.state.post})});case 3:return a=e.sent,e.next=6,a.text();case 6:r=e.sent,n.setState({responseToPost:r});case 8:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),n}return Object(f.a)(t,e),Object(p.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;this.callApi().then(function(t){return e.setState({response:t.express})}).catch(function(e){return console.log(e)})}},{key:\"render\",value:function(){var e=this;return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(\"img\",{src:v.a,className:\"App-logo\",alt:\"logo\"}),r.a.createElement(\"p\",null,\"Edit \",r.a.createElement(\"code\",null,\"src/App.js\"),\" and save to reload.\"),r.a.createElement(\"a\",{className:\"App-link\",href:\"https://reactjs.org\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Learn React\")),r.a.createElement(\"p\",null,this.state.response),r.a.createElement(\"form\",{onSubmit:this.handleSubmit},r.a.createElement(\"p\",null,r.a.createElement(\"strong\",null,\"Enter name:\")),r.a.createElement(\"input\",{type:\"text\",value:this.state.post,onChange:function(t){return e.setState({post:t.target.value})}}),r.a.createElement(\"button\",{type:\"submit\"},\"Submit\")),r.a.createElement(\"p\",null,this.state.responseToPost))}}]),t}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"}},[[11,2,1]]]);","extractedComments":[]}